plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://dl.bintray.com/orangemonkey68/mods" }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig1u_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	include "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig1u_version}"

	modImplementation "com.lettuce.fudge:artifice:${project.artifice_version}"
	include "com.lettuce.fudge:artifice:${project.artifice_version}"

	modRuntime "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

curseforge {
	apiKey = "33623805-00c2-49c5-9803-82d9637589d4"
	project {
		id = "409412"
		changelog = "Update dependencies"
		releaseType = "${project.mod_release_type}"
		addGameVersion "${project.minecraft_version}"

		relations {
			requiredLibrary "fabric-api"

			embeddedLibrary "auto-config-updated-api"

			optionalDependency "roughly-enough-items"
		}

		mainArtifact(jar) {
			displayName = "Builders' Blocks version: ${project.version}"
		}
	}
}
